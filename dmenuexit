#!/usr/bin/env bash
# dmenuexit
# a dmenu exit script for tiling window managers
# based on oblogout-blurlock and systemd/openrc-compatible
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# source .dmenurc
if [ -f "$HOME/.dmenurc" ]; then
  . $HOME/.dmenurc
elif ! [ -f "$HOME/.dmenurc" ] && [ -f "/usr/share/dmenu/dmenurc" ]; then
  cp /usr/share/dmenu/dmenurc $HOME/.dmenurc
  . $HOME/.dmenurc
else
  continue
fi

# define lock
function lock {
  screenshot='/tmp/screenshot.png'
  if [ -f /usr/bin/scrot ]; then
    scrot "$screenshot"
  elif [ -f /usr/bin/import ]; then
    import -window root "$screenshot"
  else
    continue
  fi
  if [ -f "$screenshot" ]; then
    mogrify -scale 20% -scale 500% "$screenshot"
    i3lock -i "$screenshot"
  elif [ -f "$HOME/.dmenurc" ]; then
    i3lock -ec $DMENU_NB
  else
    i3lock -ec 2b2c2b
  fi
  if [ -f "$screenshot" ]; then
    rm "$screenshot"
  fi
}

# define logout
function logout {
  if [ $DESKTOP_SESSION = "fluxbox" ];then
    killall fluxbox
  elif [ $DESKTOP_SESSION = "openbox" ]; then
    openbox --exit
  elif [ $DESKTOP_SESSION = "i3" ]; then
    i3-msg exit
  elif [ $DESKTOP_SESSION = "bspwm" ]; then
    bspc quit 1
  else
    pkill -KILL -u $USER
  fi
}

# define suspend
function suspend {
  if [ $(cat /proc/1/comm) = "systemd" ]; then
    systemctl suspend
  else
    dbus-send --system --dest=org.freedesktop.ConsoleKit --type=method_call --print-reply --reply-timeout=2000 /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Suspend boolean:true
  fi
}

# define hibernate
function hibernate {
  if [ $(cat /proc/1/comm) = "systemd" ]; then
    systemctl hibernate
  else
    dbus-send --system --dest=org.freedesktop.ConsoleKit --type=method_call --print-reply --reply-timeout=2000 /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Hibernate boolean:true
  fi
}

# define reboot
function reboot {
  if [ $(cat /proc/1/comm) = "systemd" ]; then
    systemctl reboot
  else
    dbus-send --system --dest=org.freedesktop.ConsoleKit --type=method_call --print-reply --reply-timeout=2000 --dest=org.freedesktop.ConsoleKit /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Restart
  fi
}

# define shutdown
function shutdown {
  if [ $(cat /proc/1/comm) = "systemd" ]; then
    systemctl poweroff
  else
    dbus-send --system --dest=org.freedesktop.ConsoleKit --type=method_call --print-reply --reply-timeout=2000 --dest=org.freedesktop.ConsoleKit /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Stop
  fi
}

# options menu
if [ -f "$HOME/.dmenurc" ]; then
  dmenu_cmd="dmenu $DMENU_OPTIONS"
else
  dmenu_cmd="dmenu -b -fn 'terminus-10' -nb '#2b2c2b' -nf '#f9faf9' -sf '#f9faf9' -sb '16a085'"
fi
options=$(echo -e "lock\nlogout\nswitch\nsuspend\nhibernate\nreboot\nshutdown" | $dmenu_cmd -p run:)
case "$options" in
  lock) lock & ;;
  logout) logout & ;;
  switch) dm-tool switch-to-greeter & ;;
  suspend) suspend & ;;
  hibernate) hibernate & ;;
  reboot) reboot & ;;
  shutdown) shutdown & ;;
esac

exit 0
